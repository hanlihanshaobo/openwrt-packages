name: Sync Subtrees from JSON (With PAT) & Clean Old Runs

on:
  workflow_dispatch:
  schedule:
    - cron: '0 3 * * *'  # 每天凌晨 3 点运行

env:
  PROJECT_CONFIG_URL: https://raw.githubusercontent.com/hanlihanshaobo/openwrt-packages/main/projects.json

jobs:
  sync:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout main repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.PAT }}

      - name: Setup Git config
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Download project config JSON
        run: curl -sSL "$PROJECT_CONFIG_URL" -o projects.json

      - name: Parse and Sync Projects
        run: |
          echo "" > valid_projects.txt
          jq -c '.[]' projects.json | while read -r project; do
            name=$(echo "$project" | jq -r '.name')
            repo=$(echo "$project" | jq -r '.repo')
            branch=$(echo "$project" | jq -r '.branch // "master"')
            enabled=$(echo "$project" | jq -r '.enabled')

            echo "📦 项目: $name | 分支: $branch | 启用: $enabled"

            if [[ "$enabled" == "true" ]]; then
              echo "$name" >> valid_projects.txt
              if [ -d "$name" ]; then
                echo "🔄 更新 $name"
                git subtree pull --prefix="$name" "$repo" "$branch" --squash || echo "⚠️ 无变更或拉取失败"
              else
                echo "➕ 添加 $name"
                git subtree add --prefix="$name" "$repo" "$branch" --squash || echo "❌ 添加失败"
              fi
            else
              if [ -d "$name" ]; then
                echo "🗑️ 删除未启用的目录 $name"
                git rm -rf "$name"
                git commit -m "Remove $name (disabled in config)"
              fi
            fi
          done

          # 删除未在 config 中定义的目录
          for dir in */; do
            dir=${dir%/}
            if ! grep -qx "$dir" valid_projects.txt; then
              echo "🧹 删除未列入 config 的项目: $dir"
              git rm -rf "$dir"
              git commit -m "Remove $dir (not in config)"
            fi
          done

      - name: Show working directory contents
        run: |
          echo "📁 当前目录结构："
          tree -L 2 || ls -R

      - name: Show git status & diff
        run: |
          echo "📌 Git 状态："
          git status
          echo "📌 Git Diff："
          git diff --stat || true

      - name: Commit changes if needed
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            echo "💾 提交更改"
            git add .
            git commit -m "Sync subtrees from config"
          else
            echo "✅ 没有变更需要提交"
          fi

      - name: Push changes using PAT
        run: |
          git remote set-url origin https://x-access-token:${{ secrets.PAT }}@github.com/${{ github.repository }}
          if [ -n "$(git log origin/main..HEAD)" ]; then
            echo "🚀 推送到 main 分支"
            git push origin main
          else
            echo "📭 没有需要推送的变更"
          fi

  cleanup:
    runs-on: ubuntu-latest
    needs: sync
    steps:
      - name: Delete old workflow runs (keep last 7)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "🧼 开始清理旧的 workflow run"
          runs=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
            "https://api.github.com/repos/${{ github.repository }}/actions/runs?per_page=100")

          run_ids=$(echo "$runs" | jq -r '.workflow_runs | sort_by(.created_at) | reverse | .[].id')
          to_delete=$(echo "$run_ids" | tail -n +8)

          for run_id in $to_delete; do
            echo "🔪 删除旧记录 ID: $run_id"
            curl -s -X DELETE -H "Authorization: token $GITHUB_TOKEN" \
              "https://api.github.com/repos/${{ github.repository }}/actions/runs/$run_id"
          done
